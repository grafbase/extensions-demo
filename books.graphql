extend schema
    @link(url: "https://specs.apollo.dev/federation/v2.5")
    @link(
        url: "https://extensions.grafbase.com/extensions/rest/0.3.3"
        import: ["@rest", "@restEndpoint"]
    )
    @link(
        url: "https://extensions.grafbase.com/extensions/nats/0.3.3"
        import: ["@natsPublish", "@natsSubscription"]
    )
    @restEndpoint(
        name: "restCountries"
        baseURL: "https://restcountries.com/v3.1"
    ) {
    query: Query
    mutation: Mutation
    subscription: Subscription
}

type BookDetails {
    bibKey: String
    infoUrl: String
    preview: PreviewType
    previewUrl: String
    thumbnailUrl: String
}

enum PreviewType {
    none
    partial
    full
}

type Country {
    name: String!
    region: String!
    tlds: [String!]
}

type Query {
    listAllCountries: [Country!]!
        @rest(
            method: GET
            endpoint: "restCountries"
            path: "/all"
            selection: "[.[] | { name: .name.official, region: .region, tlds: .tld }]"
        )
    countryByName(name: String!): Country
        @rest(
            method: GET
            endpoint: "restCountries"
            path: "/name/{{ args.name }}"
            selection: ".[0] | { name: .name.official, region: .region, tlds: .tld }"
        )
}

input SellBookInput {
    isbn: ID!
    price: Int!
}

type Mutation {
    sellBook(input: SellBookInput!): Boolean!
        @natsPublish(subject: "bookSales", body: { selection: "*" })
}

type BookSale {
    isbn: ID!
    price: Int!
}

type Subscription {
    sales(subject: String!): BookSale
        @natsSubscription(
            subject: "{{ args.subject }}"
            selection: "select(.price > 10)"
        )
}
